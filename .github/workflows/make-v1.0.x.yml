name: make

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

env:
  VERSION: 1.0.${{ github.run_number }}  # 动态版本号，基于当前工作流运行次数

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        run: |
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json

      - name: Install dependencies with Yarn
        run: yarn install

      - name: Build for Linux
        run: |
          yarn make

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ env.VERSION }}
          path: out/make

  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        run: |
          powershell -Command "(gc .\package.json) -replace '0.0.0', '$($env:VERSION)' | Set-Content .\package.json"

      - name: Install dependencies with Yarn
        run: yarn install

      - name: Build for Windows
        run: yarn make

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ env.VERSION }}
          path: out/make

  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        run: |
          sed -i '' "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json

      - name: Install dependencies with Yarn
        run: yarn install

      - name: Build for macOS
        run: yarn make

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ env.VERSION }}
          path: out/make

  release:
    needs: [linux, windows, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4

      - name: GH Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            macos-${{ env.VERSION }}/zip/darwin/arm64/GitHelper-darwin-arm64-${{ env.VERSION }}.zip
            macos-${{ env.VERSION }}/GitHelper-${{ env.VERSION }}-arm64.dmg
            windows-${{ env.VERSION }}/squirrel.windows/x64/GitHelper-${{ env.VERSION }} Setup.exe
            windows-${{ env.VERSION }}/squirrel.windows/x64/GitHelper-${{ env.VERSION }}-full.nupkg
            windows-${{ env.VERSION }}/zip/win32/x64/GitHelper-win32-x64-${{ env.VERSION }}.zip
            linux-${{ env.VERSION }}/deb/x64/githelper_${{ env.VERSION }}_amd64.deb
            linux-${{ env.VERSION }}/rpm/x64/GitHelper-${{ env.VERSION }}-1.x86_64.rpm
          tag_name: v${{ env.VERSION }}